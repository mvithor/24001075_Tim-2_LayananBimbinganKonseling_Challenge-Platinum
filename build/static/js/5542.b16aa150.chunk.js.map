{"version":3,"file":"static/js/5542.b16aa150.chunk.js","mappings":"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","sources":["../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","import { invariant } from 'hey-listen';\nimport { animateVisualElement, stopAnimation } from '../../render/utils/animation.mjs';\nimport { setValues } from '../../render/utils/setters.mjs';\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.5.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.5.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.5.5\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["warning","invariant","animationControls","hasMounted","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","animations","forEach","push","animateVisualElement","Promise","all","set","setValues","stop","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect","instantAnimationState","easeIn","p","easeOut","reverseEasing","easeInOut","mirrorEasing","hueToRgb","q","t","mixLinearColor","from","to","v","fromExpo","Math","sqrt","max","colorTypes","hex","rgba","hsla","asRGBA","color","type","find","test","Boolean","concat","model","parse","_ref","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mix","transform","getMixer","origin","target","mixComplex","mixArray","output","numValues","length","blendValue","map","fromThis","i","mixObject","key","undefined","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","numColors","numNumbers","pipe","values","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","Array","isArray","numMixers","mixer","easingFunction","interpolate","input","clamp","isClamp","arguments","inputLength","reverse","interpolator","progressInRange","progress","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","backOut","backIn","backInOut","easingLookup","linear","circIn","circInOut","circOut","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","state","done","value","absoluteTimes","offset","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","easing","splice","next","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","velocity","mass","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","current","currentVelocity","prevT","velocityPerSecond","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","update","passTimestamp","sync","cancelSync","animate","_ref2","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_a","_b","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","call","animation","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Object","hasOwnProperty","Element","prototype","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","has","Infinity","sampleAnimation","pregeneratedKeyframes","element","fill","iterations","direction","animateStyle","owner","onfinish","getFinalKeyframe","cancel","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scale","opacity","backgroundColor","default","getDefaultTransition","valueKey","isAnimatable","startsWith","createMotionValueAnimation","transition","valueTransition","getValueTransition","secondsToMilliseconds","isTargetAnimatable","get","getAnimatableNone","isZero","getZeroUnit","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","prev","checkBoundary","frameData","inertia","isTransitionDefined","HTMLElement","getProps","acceleratedAnimation","isKeyframesTarget","when","_delay","delayChildren","staggerChildren","staggerDirection","parseFloat","indexOf","potentialUnitType","acos","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","index","process","createRenderStep","keepAlive","immediate","startLoop","flushSync","processStep","stepId","processFrame","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","presenceId","id","blockInitialAnimation","initial","render","HandoffAppearAnimations","useEffect","animationState","animateChanges","isRefObject","ref","isVariantLabel","isAnimationControls","variantProps","isControllingVariants","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","React__default","getSnapshotBeforeUpdate","this","setProps","componentDidUpdate","children","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","isBrowser","lazyStrictMode","initialLayoutGroupConfig","React","Provider","useCallback","instance","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","layout","transformProps","translateAlias","transformPerspective","sortTransformProps","transformPropOrder","isCSSVariable","getValueAsType","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","numberValueTypes","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","size","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","camelToDash","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","resolveVariantFromProps","transitionEnd","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","useIntersectionObserver","shouldObserve","margin","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","_ref3","fallback","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_c","_d","onPointerCancel","startPress","latestProps","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","safeToRemove","shallowCompare","prevLength","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","isInitialRender","buildResolvedTypeValues","resolveVariant","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","protectedKeys","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","needsAnimating","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","resolve","variantChildren","setAnimateFunction","makeAnimator","getState","then","distance","PanSession","constructor","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","getValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","maxDepth","getVariableValue","depth","token","match","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","number","BoundingBoxDimension","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","filter","positionalValues","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","findDimensionValueType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","shouldReduceMotion","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","willChange","initialMotionValues","isWillChangeMotionValue","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","remove","clear","valueIsTransform","removeOnChange","on","latestValue","isTransformDirty","removeOnRenderRequest","sortNodePosition","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","makeTargetAnimatable","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","defaultValue","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","SubscriptionManager","_len","args","_key","DOMVisualElement","compareDocumentPosition","isMounted","getOrigin","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","super","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","replace","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","postRender","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","createDomMotionConfig","str","defaultValueType","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateX","translateY","translateZ","perspective","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","optimizedAppearDataAttribute","variant","animateVariant","resolvedDefinition","animateTarget","getAnimation","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","animationTypeState","shouldBlockAnimation","appearId","setTarget","shouldBlock","getCurrent","currentValues","isNumericalString","isZeroValueString","valueTypes","findValueType","setMotionValue","resolveFinalValueInKeyframes","setVariants","variantLabels","newValueKeys","numNewValues","targetValue","getOriginFromTransition","transitionOrigin","arr","item","timeout","checkElapsed","read","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","init","useLayoutEffect","frameDuration","MotionValue","_this","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","destroy","isColorString","r","substring","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","colorToken","numberToken","colors","colorRegex","numbers","tokenised","convertNumbersToZero","transformer","createUnitType","endsWith","observerMap","RootIds","rootId","unsupportedValue","optionsToId","toString","fallbackInView","bounds","intersectionRatio","boundingClientRect","intersectionRect","rootBounds","observer","elements","thresholds","trackVisibility","createObserver","callbacks","disconnect","useInView","triggerOnce","skip","initialInView","setRef","React2","setState","entryTarget","previousEntryTarget"],"sourceRoot":""}