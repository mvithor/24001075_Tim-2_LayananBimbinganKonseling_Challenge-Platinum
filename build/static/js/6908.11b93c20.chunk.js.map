{"version":3,"file":"static/js/6908.11b93c20.chunk.js","mappings":"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","sources":["components/container/PageContainer.js","components/shared/BlankCard.js","layouts/full/shared/breadcrumb/Breadcrumb.js","views/apps/calendar/EventData.js","views/apps/calendar/BigCalendar.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import { Card } from '@mui/material';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst BlankCard = ({ children, className }) => {\r\n  const customizer = useSelector((state) => state.customizer);\r\n  return (\r\n    <Card\r\n      sx={{ p: 0, position: 'relative' }}\r\n      className={className}\r\n      elevation={customizer.isCardShadow ? 9 : 0}\r\n      variant={!customizer.isCardShadow ? 'outlined' : undefined}\r\n    >\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nBlankCard.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default BlankCard;\r\n","import React from 'react';\r\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport breadcrumbImg from 'src/assets/images/breadcrumb/ChatBc.png';\r\nimport { IconCircle } from '@tabler/icons';\r\n\r\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\r\n  <Grid\r\n    container\r\n    sx={{\r\n      backgroundColor: 'primary.light',\r\n      borderRadius: (theme) => theme.shape.borderRadius / 4,\r\n      p: '30px 25px 20px',\r\n      marginBottom: '30px',\r\n      position: 'relative',\r\n      overflow: 'hidden',\r\n    }}\r\n  >\r\n    <Grid item xs={12} sm={6} lg={8} mb={1}>\r\n      <Typography variant=\"h4\">{title}</Typography>\r\n      <Typography color=\"textSecondary\" variant=\"h6\" fontWeight={400} mt={0.8} mb={0}>\r\n        {subtitle}\r\n      </Typography>\r\n      <Breadcrumbs\r\n        separator={\r\n          <IconCircle\r\n            size=\"5\"\r\n            fill=\"textSecondary\"\r\n            fillOpacity={'0.6'}\r\n            style={{ margin: '0 5px' }}\r\n          />\r\n        }\r\n        sx={{ alignItems: 'center', mt: items ? '10px' : '' }}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {items\r\n          ? items.map((item) => (\r\n              <div key={item.title}>\r\n                {item.to ? (\r\n                  <Link underline=\"none\" color=\"inherit\" component={NavLink} to={item.to}>\r\n                    {item.title}\r\n                  </Link>\r\n                ) : (\r\n                  <Typography color=\"textPrimary\">{item.title}</Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          : ''}\r\n      </Breadcrumbs>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} lg={4} display=\"flex\" alignItems=\"flex-end\">\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'none', md: 'block', lg: 'flex' },\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children ? (\r\n          <Box sx={{ top: '0px', position: 'absolute' }}>{children}</Box>\r\n        ) : (\r\n          <>\r\n            <Box sx={{ top: '0px', position: 'absolute' }}>\r\n              <img src={breadcrumbImg} alt={breadcrumbImg} width={'165px'} />\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default Breadcrumb;\r\n","const today = new Date();\r\nconst y = today.getFullYear();\r\nconst m = today.getMonth();\r\nconst d = today.getDate();\r\n\r\nconst Events = [\r\n  {\r\n    title: 'Twice event For two Days',\r\n    allDay: true,\r\n    start: new Date(y, m, 3),\r\n    end: new Date(y, m, 5),\r\n    color: 'default',\r\n  },\r\n  {\r\n    title: 'Learn ReactJs',\r\n    start: new Date(y, m, d + 3, 10, 30),\r\n    end: new Date(y, m, d + 3, 11, 30),\r\n    allDay: false,\r\n    color: 'green',\r\n  },\r\n  {\r\n    title: 'Launching MaterialArt Angular',\r\n    start: new Date(y, m, d + 7, 12, 0),\r\n    end: new Date(y, m, d + 7, 14, 0),\r\n    allDay: false,\r\n    color: 'red',\r\n  },\r\n  {\r\n    title: 'Lunch with Mr.Raw',\r\n    start: new Date(y, m, d - 2),\r\n    end: new Date(y, m, d - 2),\r\n    allDay: true,\r\n    color: 'azure',\r\n  },\r\n  {\r\n    title: 'Going For Party of Sahs',\r\n    start: new Date(y, m, d + 1, 19, 0),\r\n    end: new Date(y, m, d + 1, 22, 30),\r\n    allDay: false,\r\n    color: 'azure',\r\n  },\r\n  {\r\n    title: 'Learn Ionic',\r\n    start: new Date(y, m, 23),\r\n    end: new Date(y, m, 25),\r\n    color: 'warning',\r\n  },\r\n  {\r\n    title: 'Research of making own Browser',\r\n    start: new Date(y, m, 19),\r\n    end: new Date(y, m, 22),\r\n    color: 'default',\r\n  },\r\n];\r\n\r\nexport default Events;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  CardContent,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Fab,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport moment from 'moment';\r\nimport Events from './EventData';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport './Calendar.css';\r\nimport PageContainer from '../../../components/container/PageContainer';\r\nimport Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';\r\nimport { IconCheck } from '@tabler/icons';\r\nimport BlankCard from '../../../components/shared/BlankCard';\r\n\r\nmoment.locale('en-GB');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst BigCalendar = () => {\r\n  const [calevents, setCalEvents] = useState(Events);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [slot, setSlot] = useState();\r\n  const [start, setStart] = useState();\r\n  const [end, setEnd] = useState();\r\n  const [color, setColor] = useState('default');\r\n  const [update, setUpdate] = useState();\r\n\r\n  const ColorVariation = [\r\n    {\r\n      id: 1,\r\n      eColor: '#1a97f5',\r\n      value: 'default',\r\n    },\r\n    {\r\n      id: 2,\r\n      eColor: '#39b69a',\r\n      value: 'green',\r\n    },\r\n    {\r\n      id: 3,\r\n      eColor: '#fc4b6c',\r\n      value: 'red',\r\n    },\r\n    {\r\n      id: 4,\r\n      eColor: '#615dff',\r\n      value: 'azure',\r\n    },\r\n    {\r\n      id: 5,\r\n      eColor: '#fdd43f',\r\n      value: 'warning',\r\n    },\r\n  ];\r\n  const addNewEventAlert = (slotInfo) => {\r\n    setOpen(true);\r\n    setSlot(slotInfo);\r\n    setStart(slotInfo.start);\r\n    setEnd(slotInfo.end);\r\n  };\r\n  const editEvent = (event) => {\r\n    setOpen(true);\r\n    const newEditEvent = calevents.find((elem) => elem.title === event.title);\r\n    setColor(event.color);\r\n    setTitle(newEditEvent.title);\r\n    setColor(newEditEvent.color);\r\n    setStart(newEditEvent.start);\r\n    setEnd(newEditEvent.end);\r\n    setUpdate(event);\r\n  };\r\n  const updateEvent = (e) => {\r\n    e.preventDefault();\r\n    setCalEvents(\r\n      calevents.map((elem) => {\r\n        if (elem.title === update.title) {\r\n          return { ...elem, title, start, end, color };\r\n        }\r\n        return elem;\r\n      }),\r\n    );\r\n    setOpen(false);\r\n    setTitle('');\r\n    setColor('');\r\n    setStart('');\r\n    setEnd('');\r\n    setUpdate(null);\r\n  };\r\n  const inputChangeHandler = (e) => setTitle(e.target.value);\r\n  const selectinputChangeHandler = (id) => setColor(id);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const newEvents = calevents;\r\n    newEvents.push({\r\n      title,\r\n      start,\r\n      end,\r\n      color,\r\n    });\r\n    setOpen(false);\r\n    e.target.reset();\r\n    setCalEvents(newEvents);\r\n    setTitle('');\r\n    setStart(new Date());\r\n    setEnd(new Date());\r\n  };\r\n  const deleteHandler = (event) => {\r\n    const updatecalEvents = calevents.filter((ind) => ind.title !== event.title);\r\n    setCalEvents(updatecalEvents);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setTitle('');\r\n    setStart(new Date());\r\n    setEnd(new Date());\r\n    setUpdate(null);\r\n  };\r\n\r\n  const eventColors = (event) => {\r\n    if (event.color) {\r\n      return { className: `event-${event.color}` };\r\n    }\r\n    return { className: `event-default` };\r\n  };\r\n\r\n  const handleStartChange = (newValue) => {\r\n    setStart(newValue);\r\n  };\r\n  const handleEndChange = (newValue) => {\r\n    setEnd(newValue);\r\n  };\r\n\r\n  return (\r\n    <PageContainer title=\"Calendar ui\" description=\"this is Calendar page\">\r\n      <Breadcrumb title=\"Calendar\" subtitle=\"App\" />\r\n      <BlankCard key={slot} variant=\"outlined\">\r\n        {/* ------------------------------------------- */}\r\n        {/* Calendar */}\r\n        {/* ------------------------------------------- */}\r\n        <CardContent>\r\n          <Calendar\r\n            selectable\r\n            events={calevents}\r\n            defaultView=\"month\"\r\n            scrollToTime={new Date(1970, 1, 1, 6)}\r\n            defaultDate={new Date()}\r\n            localizer={localizer}\r\n            style={{ height: 'calc(100vh - 350px' }}\r\n            onSelectEvent={(event) => editEvent(event)}\r\n            onSelectSlot={(slotInfo) => addNewEventAlert(slotInfo)}\r\n            eventPropGetter={(event) => eventColors(event)}\r\n          />\r\n        </CardContent>\r\n      </BlankCard>\r\n      {/* ------------------------------------------- */}\r\n      {/* Add Calendar Event Dialog */}\r\n      {/* ------------------------------------------- */}\r\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"xs\">\r\n        <form onSubmit={update ? updateEvent : submitHandler}>\r\n          <DialogContent>\r\n            {/* ------------------------------------------- */}\r\n            {/* Add Edit title */}\r\n            {/* ------------------------------------------- */}\r\n            <Typography variant=\"h4\" sx={{ mb: 2 }}>\r\n              {update ? 'Update Event' : 'Add Event'}\r\n            </Typography>\r\n            <Typography mb={3} variant=\"subtitle2\">\r\n              {!update\r\n                ? 'To add Event kindly fillup the title and choose the event color and press the add button'\r\n                : 'To Edit/Update Event kindly change the title and choose the event color and press the update button'}\r\n            </Typography>\r\n            <TextField\r\n              id=\"Event Title\"\r\n              placeholder=\"Enter Event Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Event Title\"\r\n              value={title}\r\n              sx={{ mb: 3 }}\r\n              onChange={inputChangeHandler}\r\n            />\r\n            {/* ------------------------------------------- */}\r\n            {/* Selection of Start and end date */}\r\n            {/* ------------------------------------------- */}\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <MobileDatePicker\r\n                label=\"Start Date\"\r\n                inputFormat=\"MM/dd/yyyy\"\r\n                value={start}\r\n                onChange={handleStartChange}\r\n                renderInput={(params) => <TextField {...params} fullWidth sx={{ mb: 3 }} />}\r\n              />\r\n              <MobileDatePicker\r\n                label=\"End Date\"\r\n                inputFormat=\"MM/dd/yyyy\"\r\n                value={end}\r\n                onChange={handleEndChange}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    fullWidth\r\n                    sx={{ mb: 3 }}\r\n                    error={start > end}\r\n                    helperText={start > end ? 'End date must be later than start date' : ''}\r\n                  />\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n\r\n            {/* ------------------------------------------- */}\r\n            {/* Calendar Event Color*/}\r\n            {/* ------------------------------------------- */}\r\n            <Typography variant=\"h6\" fontWeight={600} my={2}>\r\n              Select Event Color\r\n            </Typography>\r\n            {/* ------------------------------------------- */}\r\n            {/* colors for event */}\r\n            {/* ------------------------------------------- */}\r\n            {ColorVariation.map((mcolor) => {\r\n              return (\r\n                <Fab\r\n                  color=\"primary\"\r\n                  style={{ backgroundColor: mcolor.eColor }}\r\n                  sx={{\r\n                    marginRight: '3px',\r\n                    transition: '0.1s ease-in',\r\n                    scale: mcolor.value === color ? '0.9' : '0.7',\r\n                  }}\r\n                  size=\"small\"\r\n                  key={mcolor.id}\r\n                  onClick={() => selectinputChangeHandler(mcolor.value)}\r\n                >\r\n                  {mcolor.value === color ? <IconCheck width={16} /> : ''}\r\n                </Fab>\r\n              );\r\n            })}\r\n          </DialogContent>\r\n          {/* ------------------------------------------- */}\r\n          {/* Action for dialog */}\r\n          {/* ------------------------------------------- */}\r\n          <DialogActions sx={{ p: 3 }}>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n\r\n            {update ? (\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"error\"\r\n                variant=\"contained\"\r\n                onClick={() => deleteHandler(update)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            ) : (\r\n              ''\r\n            )}\r\n            <Button type=\"submit\" disabled={!title} variant=\"contained\">\r\n              {update ? 'Update Event' : 'Add Event'}\r\n            </Button>\r\n          </DialogActions>\r\n          {/* ------------------------------------------- */}\r\n          {/* End Calendar */}\r\n          {/* ------------------------------------------- */}\r\n        </form>\r\n      </Dialog>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default BigCalendar;\r\n"],"names":["_ref","title","description","children","_jsxs","Helmet","_jsx","name","content","className","customizer","useSelector","state","Card","sx","p","position","elevation","isCardShadow","variant","undefined","subtitle","items","Grid","container","backgroundColor","borderRadius","theme","shape","marginBottom","overflow","item","xs","sm","lg","mb","Typography","color","fontWeight","mt","Breadcrumbs","separator","IconCircle","size","fill","fillOpacity","style","margin","alignItems","map","to","Link","underline","component","NavLink","display","Box","md","justifyContent","width","top","_Fragment","src","breadcrumbImg","alt","today","Date","y","getFullYear","m","getMonth","d","getDate","allDay","start","end","moment","localizer","momentLocalizer","BigCalendar","calevents","setCalEvents","useState","Events","open","setOpen","React","setTitle","slot","setSlot","setStart","setEnd","setColor","update","setUpdate","handleClose","PageContainer","Breadcrumb","BlankCard","CardContent","Calendar","selectable","events","defaultView","scrollToTime","defaultDate","height","onSelectEvent","event","newEditEvent","find","elem","editEvent","onSelectSlot","slotInfo","addNewEventAlert","eventPropGetter","concat","eventColors","Dialog","onClose","fullWidth","maxWidth","onSubmit","e","preventDefault","newEvents","push","target","reset","DialogContent","TextField","id","placeholder","label","value","onChange","LocalizationProvider","dateAdapter","AdapterDateFns","MobileDatePicker","inputFormat","newValue","renderInput","params","error","helperText","my","eColor","mcolor","Fab","marginRight","transition","scale","onClick","selectinputChangeHandler","IconCheck","DialogActions","Button","type","updatecalEvents","filter","ind","deleteHandler","disabled"],"sourceRoot":""}