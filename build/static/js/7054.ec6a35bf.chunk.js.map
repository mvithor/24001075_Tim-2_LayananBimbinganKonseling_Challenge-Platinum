{"version":3,"file":"static/js/7054.ec6a35bf.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/IconButton/iconButtonClasses.js","../node_modules/@mui/material/IconButton/IconButton.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'colorError', 'colorInfo', 'colorSuccess', 'colorWarning', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: (theme.vars || theme).palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  })\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => {\n  var _palette;\n  const palette = (_palette = (theme.vars || theme).palette) == null ? void 0 : _palette[ownerState.color];\n  return _extends({}, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  }, ownerState.color !== 'inherit' && ownerState.color !== 'default' && _extends({\n    color: palette == null ? void 0 : palette.main\n  }, !ownerState.disableRipple && {\n    '&:hover': _extends({}, palette && {\n      backgroundColor: theme.vars ? `rgba(${palette.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(palette.main, theme.palette.action.hoverOpacity)\n    }, {\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    })\n  }), ownerState.size === 'small' && {\n    padding: 5,\n    fontSize: theme.typography.pxToRem(18)\n  }, ownerState.size === 'large' && {\n    padding: 12,\n    fontSize: theme.typography.pxToRem(28)\n  }, {\n    [`&.${iconButtonClasses.disabled}`]: {\n      backgroundColor: 'transparent',\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  });\n});\n\n/**\n * Refer to the [Icons](/material-ui/icons/) section of the documentation\n * regarding the available icon options.\n */\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n  const {\n      edge = false,\n      children,\n      className,\n      color = 'default',\n      disabled = false,\n      disableFocusRipple = false,\n      size = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other, {\n    ownerState: ownerState,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { getPath } from '@mui/system';\nimport { alpha } from '@mui/system/colorManipulator';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","import { invariant } from 'hey-listen';\nimport { animateVisualElement, stopAnimation } from '../../render/utils/animation.mjs';\nimport { setValues } from '../../render/utils/setters.mjs';\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.5.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.5.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.5.5\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["getIconButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","IconButtonRoot","styled","ButtonBase","name","overridesResolver","props","styles","ownerState","root","color","concat","capitalize","edge","size","_ref","theme","_extends","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","vars","palette","action","active","transition","transitions","create","duration","shortest","disableRipple","backgroundColor","activeChannel","hoverOpacity","alpha","marginLeft","marginRight","_ref2","_palette","main","mainChannel","iconButtonClasses","disabled","React","inProps","ref","useThemeProps","children","className","disableFocusRipple","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","centerRipple","focusRipple","getLinkUtilityClass","colorTransformations","primary","textPrimary","secondary","textSecondary","error","transformedColor","transformDeprecatedColors","getPath","channelColor","LinkRoot","Typography","underline","component","button","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","outline","border","margin","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","onBlur","onFocus","TypographyClasses","variant","sx","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","event","current","Object","keys","includes","Array","isArray","warning","invariant","animationControls","hasMounted","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","animations","forEach","push","animateVisualElement","Promise","all","set","setValues","stop","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect","instantAnimationState","easeIn","p","easeOut","reverseEasing","easeInOut","mirrorEasing","hueToRgb","q","t","mixLinearColor","from","to","v","fromExpo","Math","sqrt","max","colorTypes","hex","rgba","hsla","asRGBA","type","find","test","Boolean","model","parse","hue","saturation","lightness","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mix","transform","getMixer","origin","target","mixComplex","mixArray","output","numValues","length","blendValue","map","fromThis","i","mixObject","key","undefined","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","numColors","numNumbers","pipe","values","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","clamp","isClamp","arguments","inputLength","reverse","interpolator","progressInRange","progress","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","backOut","backIn","backInOut","easingLookup","linear","circIn","circInOut","circOut","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","keyframes","keyframeValues","times","easingFunctions","state","done","value","absoluteTimes","offset","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","easing","splice","next","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","velocity","mass","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","some","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","currentVelocity","prevT","velocityPerSecond","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","update","passTimestamp","sync","cancelSync","animate","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_a","_b","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","call","animation","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","hasOwnProperty","Element","prototype","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","has","Infinity","sampleAnimation","pregeneratedKeyframes","element","fill","iterations","direction","animateStyle","owner","onfinish","getFinalKeyframe","cancel","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scale","opacity","default","getDefaultTransition","valueKey","isAnimatable","startsWith","createMotionValueAnimation","valueTransition","getValueTransition","secondsToMilliseconds","isTargetAnimatable","get","getAnimatableNone","isZero","getZeroUnit","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","prev","checkBoundary","frameData","inertia","isTransitionDefined","HTMLElement","getProps","acceleratedAnimation","isKeyframesTarget","when","_delay","delayChildren","staggerChildren","staggerDirection","parseFloat","indexOf","potentialUnitType","acos","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","index","process","createRenderStep","keepAlive","immediate","startLoop","flushSync","processStep","stepId","processFrame","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","presenceId","id","blockInitialAnimation","initial","render","HandoffAppearAnimations","useEffect","animationState","animateChanges","isRefObject","isVariantLabel","isAnimationControls","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","React__default","getSnapshotBeforeUpdate","this","setProps","componentDidUpdate","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","isBrowser","lazyStrictMode","initialLayoutGroupConfig","Provider","useCallback","instance","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","isForcedMotionValue","layout","transformProps","translateAlias","transformPerspective","sortTransformProps","transformPropOrder","isCSSVariable","getValueAsType","buildHTMLStyles","latestValues","transformTemplate","style","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","numberValueTypes","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","camelToDash","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","resolveVariantFromProps","transitionEnd","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","pointerType","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","_ref3","fallback","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_c","_d","onPointerCancel","startPress","latestProps","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","safeToRemove","shallowCompare","prevLength","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","isInitialRender","buildResolvedTypeValues","resolveVariant","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","protectedKeys","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","needsAnimating","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","resolve","variantChildren","setAnimateFunction","makeAnimator","getState","then","distance","PanSession","constructor","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","getValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","maxDepth","getVariableValue","depth","token","match","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","number","BoundingBoxDimension","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","filter","positionalValues","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","findDimensionValueType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","shouldReduceMotion","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","willChange","initialMotionValues","isWillChangeMotionValue","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","remove","clear","valueIsTransform","removeOnChange","on","latestValue","isTransformDirty","removeOnRenderRequest","sortNodePosition","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","makeTargetAnimatable","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","defaultValue","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","SubscriptionManager","_len","args","_key","DOMVisualElement","compareDocumentPosition","isMounted","getOrigin","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","super","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","replace","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","postRender","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","featureBundle","motion","createDomMotionConfig","str","defaultValueType","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","marginTop","marginBottom","scaleZ","skew","skewX","skewY","translateX","translateY","translateZ","perspective","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","optimizedAppearDataAttribute","animateVariant","resolvedDefinition","animateTarget","getAnimation","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","animationTypeState","shouldBlockAnimation","appearId","setTarget","shouldBlock","getCurrent","currentValues","isNumericalString","isZeroValueString","valueTypes","findValueType","setMotionValue","resolveFinalValueInKeyframes","setVariants","variantLabels","newValueKeys","numNewValues","targetValue","getOriginFromTransition","transitionOrigin","arr","item","timeout","checkElapsed","read","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","init","useLayoutEffect","frameDuration","MotionValue","_this","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","destroy","isColorString","r","substring","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","colorToken","numberToken","colors","colorRegex","numbers","tokenised","convertNumbersToZero","transformer","createUnitType","endsWith","observerMap","RootIds","rootId","unsupportedValue","optionsToId","toString","fallbackInView","bounds","intersectionRatio","boundingClientRect","intersectionRect","rootBounds","observer","elements","thresholds","trackVisibility","createObserver","callbacks","disconnect","useInView","triggerOnce","skip","initialInView","setRef","React2","setState","entryTarget","previousEntryTarget"],"sourceRoot":""}