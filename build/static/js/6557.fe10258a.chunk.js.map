{"version":3,"file":"static/js/6557.fe10258a.chunk.js","mappings":"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","sources":["components/container/PageContainer.js","components/custom-scroll/Scrollbar.js","components/shared/AppCard.js","layouts/full/shared/breadcrumb/Breadcrumb.js","components/apps/notes/NoteList.js","components/apps/notes/NoteSidebar.js","components/apps/notes/AddNotes.js","components/apps/notes/NoteContent.js","views/apps/notes/Notes.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst PageContainer = ({ title, description, children }) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n    </Helmet>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import PropTypes from 'prop-types';\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\nimport { Box, styled } from '@mui/material';\r\n\r\nconst SimpleBarStyle = styled(SimpleBar)(() => ({\r\n  maxHeight: '100%',\r\n  '.simplebar-scrollbar:before': { backgroundColor: '#2e2d348f' },\r\n}));\r\n\r\nconst Scrollbar = (props) => {\r\n  const { children, sx, ...other } = props;\r\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent,\r\n  );\r\n\r\n  if (isMobile) {\r\n    return <Box sx={{ overflowX: 'auto' }}>{children}</Box>;\r\n  }\r\n\r\n  return (\r\n    <SimpleBarStyle sx={sx} {...other}>\r\n      {children}\r\n    </SimpleBarStyle>\r\n  );\r\n};\r\n\r\nScrollbar.propTypes = {\r\n  children: PropTypes.node,\r\n  sx: PropTypes.object,\r\n  other: PropTypes.any,\r\n};\r\n\r\nexport default Scrollbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AppCard = ({ children }) => {\r\n  const customizer = useSelector((state) => state.customizer);\r\n  return (\r\n    <Card\r\n      sx={{ display: 'flex', p: 0 }}\r\n      elevation={customizer.isCardShadow ? 9 : 0}\r\n      variant={!customizer.isCardShadow ? 'outlined' : undefined}\r\n    >\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nAppCard.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default AppCard;\r\n","import React from 'react';\r\nimport { Grid, Typography, Box, Breadcrumbs, Link } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport breadcrumbImg from 'src/assets/images/breadcrumb/ChatBc.png';\r\nimport { IconCircle } from '@tabler/icons';\r\n\r\nconst Breadcrumb = ({ subtitle, items, title, children }) => (\r\n  <Grid\r\n    container\r\n    sx={{\r\n      backgroundColor: 'primary.light',\r\n      borderRadius: (theme) => theme.shape.borderRadius / 4,\r\n      p: '30px 25px 20px',\r\n      marginBottom: '30px',\r\n      position: 'relative',\r\n      overflow: 'hidden',\r\n    }}\r\n  >\r\n    <Grid item xs={12} sm={6} lg={8} mb={1}>\r\n      <Typography variant=\"h4\">{title}</Typography>\r\n      <Typography color=\"textSecondary\" variant=\"h6\" fontWeight={400} mt={0.8} mb={0}>\r\n        {subtitle}\r\n      </Typography>\r\n      <Breadcrumbs\r\n        separator={\r\n          <IconCircle\r\n            size=\"5\"\r\n            fill=\"textSecondary\"\r\n            fillOpacity={'0.6'}\r\n            style={{ margin: '0 5px' }}\r\n          />\r\n        }\r\n        sx={{ alignItems: 'center', mt: items ? '10px' : '' }}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {items\r\n          ? items.map((item) => (\r\n              <div key={item.title}>\r\n                {item.to ? (\r\n                  <Link underline=\"none\" color=\"inherit\" component={NavLink} to={item.to}>\r\n                    {item.title}\r\n                  </Link>\r\n                ) : (\r\n                  <Typography color=\"textPrimary\">{item.title}</Typography>\r\n                )}\r\n              </div>\r\n            ))\r\n          : ''}\r\n      </Breadcrumbs>\r\n    </Grid>\r\n    <Grid item xs={12} sm={6} lg={4} display=\"flex\" alignItems=\"flex-end\">\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'none', md: 'block', lg: 'flex' },\r\n          alignItems: 'center',\r\n          justifyContent: 'flex-end',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children ? (\r\n          <Box sx={{ top: '0px', position: 'absolute' }}>{children}</Box>\r\n        ) : (\r\n          <>\r\n            <Box sx={{ top: '0px', position: 'absolute' }}>\r\n              <img src={breadcrumbImg} alt={breadcrumbImg} width={'165px'} />\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default Breadcrumb;\r\n","import React, { useEffect } from 'react';\r\nimport { IconButton, Box, Stack, Typography, TextField, Tooltip, Alert } from '@mui/material';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Scrollbar from '../../custom-scroll/Scrollbar';\r\nimport {\r\n  fetchNotes,\r\n  SelectNote,\r\n  DeleteNote,\r\n  SearchNotes,\r\n} from '../../../store/apps/notes/NotesSlice';\r\nimport { IconTrash } from '@tabler/icons';\r\n\r\nconst NoteList = () => {\r\n  const dispatch = useDispatch();\r\n  const activeNote = useSelector((state) => state.notesReducer.notesContent);\r\n  const searchTerm = useSelector((state) => state.notesReducer.noteSearch);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchNotes());\r\n  }, [dispatch]);\r\n\r\n  const filterNotes = (notes, nSearch) => {\r\n    if (nSearch !== '')\r\n      return notes.filter(\r\n        (t) =>\r\n          !t.deleted &&\r\n          t.title.toLocaleLowerCase().concat(' ').includes(nSearch.toLocaleLowerCase()),\r\n      );\r\n\r\n    return notes.filter((t) => !t.deleted);\r\n  };\r\n\r\n  const notes = useSelector((state) =>\r\n    filterNotes(state.notesReducer.notes, state.notesReducer.noteSearch),\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Box p={3} px={2}>\r\n        <TextField\r\n          id=\"search\"\r\n          value={searchTerm}\r\n          placeholder=\"Search Notes\"\r\n          inputProps={{ 'aria-label': 'Search Notes' }}\r\n          size=\"small\"\r\n          type=\"search\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          onChange={(e) => dispatch(SearchNotes(e.target.value))}\r\n        />\r\n        <Typography variant=\"h6\" mb={0} mt={4} pl={1}>\r\n          All Notes\r\n        </Typography>\r\n      </Box>\r\n      <Box>\r\n        <Scrollbar sx={{ height: { lg: 'calc(100vh - 300px)', sm: '100vh' }, maxHeight: '700px' }}>\r\n          {notes && notes.length ? (\r\n            notes.map((note) => (\r\n              <Box key={note.id} px={2}>\r\n                <Box\r\n                  p={2}\r\n                  sx={{\r\n                    position: 'relative',\r\n                    cursor: 'pointer',\r\n                    mb: 1,\r\n                    transition: '0.1s ease-in',\r\n                    transform: activeNote === note.id ? 'scale(1)' : 'scale(0.95)',\r\n                    backgroundColor: `${note.color}.light`,\r\n                  }}\r\n                  onClick={() => dispatch(SelectNote(note.id))}\r\n                >\r\n                  <Typography variant=\"h6\" noWrap color={note.color + '.main'}>\r\n                    {note.title}\r\n                  </Typography>\r\n                  <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Typography variant=\"caption\">\r\n                      {new Date(note.datef).toLocaleDateString()}\r\n                    </Typography>\r\n                    <Tooltip title=\"Delete\">\r\n                      <IconButton\r\n                        aria-label=\"delete\"\r\n                        size=\"small\"\r\n                        onClick={() => dispatch(DeleteNote(note.id))}\r\n                      >\r\n                        <IconTrash width={18} />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Stack>\r\n                </Box>\r\n              </Box>\r\n            ))\r\n          ) : (\r\n            <Box m={2}>\r\n              <Alert severity=\"error\" variant=\"filled\" sx={{ color: 'white' }}>\r\n                No Notes Found!\r\n              </Alert>\r\n            </Box>\r\n          )}\r\n        </Scrollbar>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n","import React from 'react';\r\nimport { Drawer, useMediaQuery } from '@mui/material';\r\nimport NoteList from './NoteList';\r\n\r\nconst drawerWidth = 260;\r\n\r\nconst NoteSidebar = ({ isMobileSidebarOpen, onSidebarClose }) => {\r\n  const lgUp = useMediaQuery((theme) => theme.breakpoints.up('lg'));\r\n\r\n  return (\r\n    <Drawer\r\n      sx={{\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        zIndex: lgUp ? 0 : 1,\r\n        [`& .MuiDrawer-paper`]: { position: 'relative' },\r\n      }}\r\n      open={isMobileSidebarOpen}\r\n      onClose={onSidebarClose}\r\n      variant={lgUp ? 'persistent' : 'temporary'}\r\n    >\r\n      <NoteList />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default NoteSidebar;\r\n","import * as React from 'react';\r\nimport { addNote } from 'src/store/apps/notes/NotesSlice';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  Fab,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { IconCheck } from '@tabler/icons';\r\n\r\nconst AddNotes = ({ colors }) => {\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scolor, setScolor] = React.useState('primary');\r\n  const id = useSelector((state) => state.notesReducer.notes.length + 1);\r\n  const [title, setTitle] = React.useState('');\r\n\r\n  const setColor = (e) => {\r\n    setScolor(e);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" disableElevation color=\"primary\" onClick={handleClickOpen}>\r\n        Add Note\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogContent>\r\n          <Typography variant=\"h5\" mb={2} fontWeight={700}>\r\n            Add New Note\r\n          </Typography>\r\n          <DialogContentText>\r\n            To add new notes please enter your description and choose note colors. and press the\r\n            submit button to add new note.\r\n          </DialogContentText>\r\n          <TextField\r\n            multiline\r\n            rows={5}\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            margin=\"normal\"\r\n            id=\"description\"\r\n            label=\"Add Note Description\"\r\n            type=\"text\"\r\n            fullWidth\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          />\r\n          <Typography variant=\"h6\" my={2}>\r\n            Choose Color\r\n          </Typography>\r\n          {colors.map((color) => (\r\n            <Fab\r\n              color={color.disp}\r\n              sx={{\r\n                marginRight: '3px',\r\n                transition: '0.1s ease-in',\r\n                scale: scolor === color.disp ? '0.9' : '0.7',\r\n              }}\r\n              size=\"small\"\r\n              key={color.disp}\r\n              onClick={() => setColor(color.disp)}\r\n            >\r\n              {scolor === color.disp ? <IconCheck /> : ''}\r\n            </Fab>\r\n          ))}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button\r\n            disabled={title === ''}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(addNote(id, title, scolor));\r\n              setOpen(false);\r\n              setTitle('');\r\n            }}\r\n            variant=\"contained\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNotes;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Fab,\r\n  TextField,\r\n  FormLabel,\r\n  useTheme,\r\n  IconButton,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { IconCheck, IconMenu2 } from '@tabler/icons';\r\n\r\nimport { UpdateNote } from '../../../store/apps/notes/NotesSlice';\r\nimport AddNotes from './AddNotes';\r\n\r\nconst NoteContent = ({ toggleNoteSidebar }) => {\r\n  const noteDetails = useSelector(\r\n    (state) => state.notesReducer.notes[state.notesReducer.notesContent - 1],\r\n  );\r\n  const theme = useTheme();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const colorvariation = [\r\n    {\r\n      id: 1,\r\n      lineColor: theme.palette.warning.main,\r\n      disp: 'warning',\r\n    },\r\n    {\r\n      id: 2,\r\n      lineColor: theme.palette.info.main,\r\n      disp: 'info',\r\n    },\r\n    {\r\n      id: 3,\r\n      lineColor: theme.palette.error.main,\r\n      disp: 'error',\r\n    },\r\n    {\r\n      id: 4,\r\n      lineColor: theme.palette.success.main,\r\n      disp: 'success',\r\n    },\r\n    {\r\n      id: 5,\r\n      lineColor: theme.palette.primary.main,\r\n      disp: 'primary',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ height: { lg: 'calc(100vh - 250px)', sm: '100vh' }, maxHeight: '700px' }}>\r\n      {/* ------------------------------------------- */}\r\n      {/* Header Part */}\r\n      {/* ------------------------------------------- */}\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" p={2}>\r\n        <IconButton onClick={toggleNoteSidebar}>\r\n          <IconMenu2 stroke={1.5} />\r\n        </IconButton>\r\n        <AddNotes colors={colorvariation} />\r\n      </Box>\r\n      <Divider />\r\n      {/* ------------------------------------------- */}\r\n      {/* Edit notes */}\r\n      {/* ------------------------------------------- */}\r\n      {noteDetails && noteDetails.deleted === false ? (\r\n        <Box p={3}>\r\n          <FormLabel htmlFor=\"outlined-multiline-static\">\r\n            <Typography variant=\"h6\" mb={2} fontWeight={600} color=\"text.primary\">\r\n              Edit Note\r\n            </Typography>\r\n          </FormLabel>\r\n\r\n          <TextField\r\n            id=\"outlined-multiline-static\"\r\n            placeholder=\"Edit Note\"\r\n            multiline\r\n            fullWidth\r\n            rows={5}\r\n            variant=\"outlined\"\r\n            value={noteDetails.title}\r\n            onChange={(e) => dispatch(UpdateNote(noteDetails.id, 'title', e.target.value))}\r\n          />\r\n          <br />\r\n          <Typography variant=\"h6\" mt={3} mb={2} fontWeight={600}>\r\n            Change Note Color\r\n          </Typography>\r\n\r\n          {colorvariation.map((color1) => (\r\n            <Fab\r\n              sx={{\r\n                marginRight: '3px',\r\n                boxShadow: 'none',\r\n                transition: '0.1s ease-in',\r\n                scale: noteDetails.color === color1.disp ? '0.9' : '0.7',\r\n              }}\r\n              size=\"small\"\r\n              key={color1.id}\r\n              color={color1?.disp}\r\n              onClick={() => dispatch(UpdateNote(noteDetails.id, 'color', color1.disp))}\r\n            >\r\n              {noteDetails.color === color1.disp ? <IconCheck width=\"16\" /> : ''}\r\n            </Fab>\r\n          ))}\r\n        </Box>\r\n      ) : (\r\n        <Box sx={{ textAlign: 'center', fontSize: '24px', mt: 2 }}>Select a Note</Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NoteContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, useMediaQuery } from '@mui/material';\r\nimport Breadcrumb from '../../../layouts/full/shared/breadcrumb/Breadcrumb';\r\nimport PageContainer from '../../../components/container/PageContainer';\r\nimport NoteSidebar from '../../../components/apps/notes/NoteSidebar';\r\nimport NoteContent from '../../../components/apps/notes/NoteContent';\r\nimport AppCard from 'src/components/shared/AppCard';\r\n\r\nconst BCrumb = [\r\n  {\r\n    to: '/',\r\n    title: 'Home',\r\n  },\r\n  {\r\n    title: 'Notes',\r\n  },\r\n];\r\n\r\nconst Notes = () => {\r\n  const [isMobileSidebarOpen, setMobileSidebarOpen] = useState(true);\r\n  const lgDown = useMediaQuery((theme) => theme.breakpoints.down('lg'));\r\n\r\n  useEffect(() => {\r\n    setMobileSidebarOpen(prevState => {\r\n      // Invert the state based on lgDown\r\n      if (lgDown) {\r\n        return !prevState;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  }, [lgDown]);\r\n\r\n  return (\r\n    <PageContainer title=\"Notes ui\" description=\"this is Note page\">\r\n      <Breadcrumb title=\"Note app\" items={BCrumb} />\r\n      <AppCard>\r\n        {/* Left part */}\r\n        {isMobileSidebarOpen && (\r\n          <NoteSidebar\r\n            isMobileSidebarOpen={isMobileSidebarOpen}\r\n            onSidebarClose={() => setMobileSidebarOpen(false)}\r\n          />\r\n        )}\r\n        {/* Right part */}\r\n        <Box flexGrow={1}>\r\n          <NoteContent toggleNoteSidebar={() => setMobileSidebarOpen(!isMobileSidebarOpen)} />\r\n        </Box>\r\n      </AppCard>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n"],"names":["_ref","title","description","children","_jsxs","Helmet","_jsx","name","content","SimpleBarStyle","styled","SimpleBar","maxHeight","backgroundColor","props","sx","other","test","navigator","userAgent","Box","overflowX","customizer","useSelector","state","Card","display","p","elevation","isCardShadow","variant","undefined","subtitle","items","Grid","container","borderRadius","theme","shape","marginBottom","position","overflow","item","xs","sm","lg","mb","Typography","color","fontWeight","mt","Breadcrumbs","separator","IconCircle","size","fill","fillOpacity","style","margin","alignItems","map","to","Link","underline","component","NavLink","md","justifyContent","width","top","_Fragment","src","breadcrumbImg","alt","NoteList","dispatch","useDispatch","activeNote","notesReducer","notesContent","searchTerm","noteSearch","useEffect","fetchNotes","notes","filterNotes","nSearch","filter","t","deleted","toLocaleLowerCase","concat","includes","px","TextField","id","value","placeholder","inputProps","type","fullWidth","onChange","e","SearchNotes","target","pl","Scrollbar","height","length","note","cursor","transition","transform","onClick","SelectNote","noWrap","Stack","direction","Date","datef","toLocaleDateString","Tooltip","IconButton","DeleteNote","IconTrash","m","Alert","severity","isMobileSidebarOpen","onSidebarClose","lgUp","useMediaQuery","breakpoints","up","Drawer","flexShrink","zIndex","open","onClose","colors","setOpen","React","scolor","setScolor","setTitle","handleClose","Button","disableElevation","handleClickOpen","Dialog","DialogContent","DialogContentText","multiline","rows","label","my","Fab","disp","marginRight","scale","setColor","IconCheck","DialogActions","disabled","preventDefault","addNote","toggleNoteSidebar","noteDetails","useTheme","colorvariation","lineColor","palette","warning","main","info","error","success","primary","IconMenu2","stroke","AddNotes","Divider","FormLabel","htmlFor","UpdateNote","color1","boxShadow","textAlign","fontSize","BCrumb","Notes","setMobileSidebarOpen","useState","lgDown","down","prevState","PageContainer","Breadcrumb","AppCard","NoteSidebar","flexGrow","NoteContent"],"sourceRoot":""}