{"version":3,"file":"static/js/1010.c277e5e3.chunk.js","mappings":"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","sources":["components/forms/theme-elements/CustomSelect.js","views/authentication/authForms/AuthRegister.js","views/authentication/auth1/Register.js","assets/images/svgs/google-icon.svg","assets/images/svgs/facebook-icon.svg","components/forms/theme-elements/CustomSocialButton.js","views/authentication/authForms/AuthSocialButtons.js"],"sourcesContent":["import React from 'react';\r\nimport { styled, Select } from '@mui/material';\r\n\r\nconst CustomSelect = styled((props) => <Select {...props} />)(({ theme }) => ({\r\n    \r\n}));\r\n\r\nexport default CustomSelect;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Typography, Button, Divider, Alert, IconButton, InputAdornment, MenuItem, Grid } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\n\r\nimport CustomTextField from '../../../components/forms/theme-elements/CustomTextField';\r\nimport CustomFormLabel from '../../../components/forms/theme-elements/CustomFormLabel';\r\nimport { Stack } from '@mui/system';\r\nimport AuthSocialButtons from './AuthSocialButtons';\r\nimport CustomSelect from 'src/components/forms/theme-elements/CustomSelect'; \r\n\r\nconst AuthRegister = ({ title, subtitle, subtext }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [confPassword, setConfPassword] = useState('');\r\n    const [showConfPassword, setShowConfPassword] = useState(false);\r\n    const [jenis_kelamin_id, setJenisKelaminId] = useState(''); \r\n    const [tanggal_lahir, setTanggalLahir] = useState(null);\r\n    const [kelas_id, setKelasId] = useState(''); \r\n    const [alamat, setAlamat] = useState('');\r\n    const [genderOptions, setGenderOptions] = useState([]);\r\n    const [kelasOptions, setKelasOptions] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchGenderOptions = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:4000/users/jenis-kelamin');\r\n                setGenderOptions(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching gender options:\", error);\r\n            }\r\n        };\r\n\r\n        const fetchKelasOptions = async () => {\r\n            try {\r\n              const response = await axios.get('http://localhost:4000/kelas/auth/kelas');\r\n              setKelasOptions(response.data);\r\n            } catch (error) {\r\n              console.error(\"Error fetching kelas options:\", error);\r\n            }\r\n          };\r\n\r\n        fetchGenderOptions();\r\n        fetchKelasOptions();\r\n    }, []);\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setSuccess('');\r\n        try {\r\n            await axios.post('http://localhost:4000/auth/register', {\r\n                name,\r\n                email,\r\n                password,\r\n                confPassword,\r\n                jenis_kelamin_id, \r\n                tanggal_lahir,\r\n                kelas_id, \r\n                alamat\r\n            });\r\n            setSuccess('Registrasi berhasil! Silakan login.');\r\n            setTimeout(() => {\r\n                navigate('/auth/login');\r\n            }, 2000); // Redirect after 2 seconds\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                setError(error.response.data.msg);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {title ? (\r\n                <Typography fontWeight=\"700\" variant=\"h3\" mb={1}>\r\n                    <Box mb={5}>\r\n                        {error && <ColorAlerts message={error} />}\r\n                    </Box>\r\n                    {title}\r\n                </Typography>\r\n            ) : null}\r\n\r\n            {subtext}\r\n            <AuthSocialButtons title=\"Sign up with\" />\r\n            <Box mt={3}>\r\n                <Divider>\r\n                    <Typography\r\n                        component=\"span\"\r\n                        color=\"textPrimary\"\r\n                        variant=\"h6\"\r\n                        fontWeight=\"400\"\r\n                        position=\"relative\"\r\n                        px={2}\r\n                    >\r\n                        or sign up with\r\n                    </Typography>\r\n                </Divider>\r\n            </Box>\r\n            <Box component=\"form\" onSubmit={handleRegister}>\r\n                <Stack mb={3}>\r\n                    <CustomFormLabel htmlFor=\"name\">Nama Lengkap</CustomFormLabel>\r\n                    <CustomTextField\r\n                        id=\"name\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Nama Lengkap\"\r\n                        fullWidth\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        required\r\n                        autoComplete=\"name\"\r\n                    />\r\n                    <CustomFormLabel htmlFor=\"email\">Email</CustomFormLabel>\r\n                    <CustomTextField\r\n                        id=\"email\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"@example\"\r\n                        fullWidth\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                        autoComplete=\"email\"\r\n                    />\r\n                    <CustomFormLabel htmlFor=\"password\">Password</CustomFormLabel>\r\n                    <CustomTextField\r\n                        id=\"password\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        value={password}\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        onClick={() => setShowPassword(!showPassword)}\r\n                                        onMouseDown={(e) => e.preventDefault()}\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                        required\r\n                    />\r\n                    <CustomFormLabel htmlFor=\"confPassword\">Konfirmasi Password</CustomFormLabel>\r\n                    <CustomTextField\r\n                        id=\"confPassword\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        value={confPassword}\r\n                        type={showConfPassword ? 'text' : 'password'}\r\n                        onChange={(e) => setConfPassword(e.target.value)}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        onClick={() => setShowConfPassword(!showConfPassword)}\r\n                                        onMouseDown={(e) => e.preventDefault()}\r\n                                    >\r\n                                        {showConfPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                        required\r\n                    />\r\n                    <Grid>\r\n                        <CustomFormLabel htmlFor=\"jenis_kelamin_id\">Jenis Kelamin</CustomFormLabel>\r\n                        <CustomSelect\r\n                            id=\"jenis_kelamin_id\"\r\n                            value={jenis_kelamin_id}\r\n                            onChange={(e) => setJenisKelaminId(e.target.value)}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                        >\r\n                            {genderOptions.map((genderOption) => (\r\n                                <MenuItem key={genderOption.id} value={genderOption.id}>\r\n                                    {genderOption.jenis_kelamin}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </CustomSelect>\r\n                    </Grid>\r\n\r\n                    <CustomFormLabel htmlFor=\"tanggal_lahir\">Tanggal Lahir</CustomFormLabel>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <DatePicker\r\n                            renderInput={(props) => (\r\n                                <CustomTextField\r\n                                    {...props}\r\n                                    fullWidth\r\n                                    size=\"medium\"\r\n                                />\r\n                            )}\r\n                            placeholder=\"Tanggal Lahir\"\r\n                            value={tanggal_lahir}\r\n                            onChange={(newValue) => setTanggalLahir(newValue)}\r\n                            required\r\n                        />\r\n                    </LocalizationProvider>\r\n                    <CustomFormLabel htmlFor=\"kelas_id\">Kelas</CustomFormLabel>\r\n                    <CustomSelect\r\n                       id=\"kelas_id\"\r\n                       name=\"kelas_id\"\r\n                       value={kelas_id}\r\n                       onChange={(e) => setKelasId(e.target.value)}\r\n                       fullWidth\r\n                       variant=\"outlined\"\r\n                       required\r\n                    >\r\n                        {kelasOptions.map((kelasOption) => (\r\n                            <MenuItem key={kelasOption.id} value={kelasOption.id}>\r\n                                {kelasOption.nama_kelas}\r\n                            </MenuItem>\r\n                            ))}\r\n                    </CustomSelect>\r\n                    <CustomFormLabel htmlFor=\"alamat\">Alamat</CustomFormLabel>\r\n                    <CustomTextField\r\n                        id=\"alamat\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Alamat\"\r\n                        fullWidth\r\n                        value={alamat}\r\n                        onChange={(e) => setAlamat(e.target.value)}\r\n                        required\r\n                    />\r\n                </Stack>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    fullWidth\r\n                    sx={{\r\n                        backgroundColor: \"#F48C06\",\r\n                        '&:hover': {\r\n                            backgroundColor: \"#f7a944\",\r\n                        }\r\n                    }}\r\n                    type=\"submit\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Box>\r\n\r\n            {subtitle}\r\n        </>\r\n    );\r\n};\r\n\r\nconst ColorAlerts = ({ message }) => {\r\n    return (\r\n        <Alert severity=\"error\">\r\n            {message}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nexport default AuthRegister;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid, Box, Typography, Stack } from '@mui/material';\r\n\r\nimport PageContainer from 'src/components/container/PageContainer';\r\nimport img1 from 'src/assets/images/backgrounds/login-bg.svg';\r\nimport Logo from 'src/layouts/full/shared/logo/Logo';\r\n\r\nimport AuthRegister from '../authForms/AuthRegister';\r\n\r\nconst Register = () => (\r\n  <PageContainer title=\"Register\" description=\"this is Register page\">\r\n    <Grid container spacing={0} justifyContent=\"center\" sx={{ overflowX: 'hidden' }}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={12}\r\n        lg={7}\r\n        xl={8}\r\n        sx={{\r\n          position: 'relative',\r\n          '&:before': {\r\n            content: '\"\"',\r\n            background: 'radial-gradient(#d2f1df, #d3d7fa, #bad8f4)',\r\n            backgroundSize: '400% 400%',\r\n            animation: 'gradient 15s ease infinite',\r\n            position: 'absolute',\r\n            height: '100%',\r\n            width: '100%',\r\n            opacity: '0.3',\r\n          },\r\n        }}\r\n      >\r\n        <Box position=\"relative\">\r\n          <Box px={3}>\r\n            <Logo />\r\n          </Box>\r\n          <Box\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            height={'calc(100vh - 75px)'}\r\n            sx={{\r\n              display: {\r\n                xs: 'none',\r\n                lg: 'flex',\r\n              },\r\n            }}\r\n          >\r\n            <img\r\n              src={img1}\r\n              alt=\"bg\"\r\n              style={{\r\n                width: '100%',\r\n                maxWidth: '500px',\r\n              }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={12}\r\n        lg={5}\r\n        xl={4}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box p={4}>\r\n          <AuthRegister\r\n            title=\"Welcome to Aspirasi Sekolah\"\r\n            subtext={\r\n              <Typography variant=\"subtitle1\" color=\"textPrimary\" mb={1}>\r\n                 Atasi Tantangan, Capai Tujuan, dan Kuasai Keterampilan\r\n              </Typography>\r\n            }\r\n            subtitle={\r\n              <Stack direction=\"row\" spacing={1} mt={3}>\r\n                <Typography color=\"textPrimary\" variant=\"h6\" fontWeight=\"400\">\r\n                  Sudah Memiliki Akun?\r\n                </Typography>\r\n                <Typography\r\n                  component={Link}\r\n                  to=\"/auth/login\"\r\n                  fontWeight=\"500\"\r\n                  sx={{\r\n                    textDecoration: 'none',\r\n                    color: 'primary.main',\r\n                  }}\r\n                >\r\n                  Sign In\r\n                </Typography>\r\n              </Stack>\r\n            }\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  </PageContainer>\r\n);\r\n\r\nexport default Register;\r\n","var _path, _path2, _path3, _path4;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgGoogleIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 28,\n    height: 28,\n    viewBox: \"0 0 28 28\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.9851 14.2618C27.9851 13.1146 27.8899 12.2775 27.6837 11.4094H14.2788V16.5871H22.1472C21.9886 17.8738 21.132 19.8116 19.2283 21.1137L19.2016 21.287L23.44 24.4956L23.7336 24.5242C26.4304 22.0904 27.9851 18.5093 27.9851 14.2618Z\",\n    fill: \"#4285F4\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.279 27.904C18.1338 27.904 21.37 26.6637 23.7338 24.5245L19.2285 21.114C18.0228 21.9356 16.4047 22.5092 14.279 22.5092C10.5034 22.5092 7.29894 20.0754 6.15663 16.7114L5.9892 16.7253L1.58205 20.0583L1.52441 20.2149C3.87224 24.7725 8.69486 27.904 14.279 27.904Z\",\n    fill: \"#34A853\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.15656 16.7113C5.85516 15.8432 5.68072 14.913 5.68072 13.9519C5.68072 12.9907 5.85516 12.0606 6.14071 11.1925L6.13272 11.0076L1.67035 7.62109L1.52435 7.68896C0.556704 9.58024 0.00146484 11.7041 0.00146484 13.9519C0.00146484 16.1997 0.556704 18.3234 1.52435 20.2147L6.15656 16.7113Z\",\n    fill: \"#FBBC05\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.279 5.3947C16.9599 5.3947 18.7683 6.52635 19.7995 7.47204L23.8289 3.6275C21.3542 1.37969 18.1338 0 14.279 0C8.69485 0 3.87223 3.1314 1.52441 7.68899L6.14077 11.1925C7.29893 7.82856 10.5034 5.3947 14.279 5.3947Z\",\n    fill: \"#EB4335\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGoogleIcon);\nexport default __webpack_public_path__ + \"static/media/google-icon.95e5452dec502669b35ae4455f6cc0ad.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgFacebookIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 800,\n    width: 1200,\n    viewBox: \"-204.79995 -341.33325 1774.9329 2047.9995\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1365.333 682.667C1365.333 305.64 1059.693 0 682.667 0 305.64 0 0 305.64 0 682.667c0 340.738 249.641 623.16 576 674.373V880H402.667V682.667H576v-150.4c0-171.094 101.917-265.6 257.853-265.6 74.69 0 152.814 13.333 152.814 13.333v168h-86.083c-84.804 0-111.25 52.623-111.25 106.61v128.057h189.333L948.4 880H789.333v477.04c326.359-51.213 576-333.635 576-674.373\",\n    fill: \"#1877f2\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M948.4 880l30.267-197.333H789.333V554.609C789.333 500.623 815.78 448 900.584 448h86.083V280s-78.124-13.333-152.814-13.333c-155.936 0-257.853 94.506-257.853 265.6v150.4H402.667V880H576v477.04a687.805 687.805 0 00106.667 8.293c36.288 0 71.91-2.84 106.666-8.293V880H948.4\",\n    fill: \"#fff\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFacebookIcon);\nexport default __webpack_public_path__ + \"static/media/facebook-icon.f0391d69645c7323017248ba6ecd7fa8.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button } from '@mui/material';\r\n\r\nconst CustomSocialButton = styled((props) => (\r\n  <Button variant=\"outlined\" size=\"large\" color=\"inherit\" {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n\r\n  '&:hover': {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nexport default CustomSocialButton;\r\n","import React from 'react';\r\nimport icon1 from 'src/assets/images/svgs/google-icon.svg';\r\nimport icon2 from 'src/assets/images/svgs/facebook-icon.svg';\r\nimport CustomSocialButton from '../../../components/forms/theme-elements/CustomSocialButton';\r\nimport { Stack } from '@mui/system';\r\nimport { Avatar, Box } from '@mui/material';\r\n\r\nconst AuthSocialButtons = ({ title }) => (\r\n  <>\r\n    <Stack direction=\"row\" justifyContent=\"center\" spacing={2} mt={3}>\r\n      <CustomSocialButton>\r\n        <Avatar\r\n          src={icon1}\r\n          alt={icon1}\r\n          sx={{\r\n            width: 16,\r\n            height: 16,\r\n            borderRadius: 0,\r\n            mr: 1,\r\n          }}\r\n        />\r\n        <Box sx={{ display: { xs: 'none', sm: 'flex' }, whiteSpace: 'nowrap', mr: { sm: '3px' } }}>\r\n          {title}{' '}\r\n        </Box>{' '}\r\n        Google\r\n      </CustomSocialButton>\r\n      <CustomSocialButton>\r\n        <Avatar\r\n          src={icon2}\r\n          alt={icon2}\r\n          sx={{\r\n            width: 25,\r\n            height: 25,\r\n            borderRadius: 0,\r\n            mr: 1,\r\n          }}\r\n        />\r\n        <Box sx={{ display: { xs: 'none', sm: 'flex' }, whiteSpace: 'nowrap', mr: { sm: '3px' } }}>\r\n          {title}{' '}\r\n        </Box>{' '}\r\n        FB\r\n      </CustomSocialButton>\r\n    </Stack>\r\n  </>\r\n);\r\n\r\nexport default AuthSocialButtons;\r\n"],"names":["styled","props","_jsx","Select","_ref","theme","ColorAlerts","_ref2","message","Alert","severity","children","title","subtitle","subtext","name","setName","useState","email","setEmail","password","setPassword","showPassword","setShowPassword","confPassword","setConfPassword","showConfPassword","setShowConfPassword","jenis_kelamin_id","setJenisKelaminId","tanggal_lahir","setTanggalLahir","kelas_id","setKelasId","alamat","setAlamat","genderOptions","setGenderOptions","kelasOptions","setKelasOptions","error","setError","success","setSuccess","navigate","useNavigate","useEffect","async","response","axios","data","console","fetchGenderOptions","fetchKelasOptions","_jsxs","_Fragment","Typography","fontWeight","variant","mb","Box","AuthSocialButtons","mt","Divider","component","color","position","px","onSubmit","e","preventDefault","setTimeout","log","msg","Stack","CustomFormLabel","htmlFor","CustomTextField","id","placeholder","fullWidth","value","onChange","target","required","autoComplete","type","InputProps","endAdornment","InputAdornment","IconButton","onClick","onMouseDown","Visibility","VisibilityOff","Grid","CustomSelect","map","genderOption","MenuItem","jenis_kelamin","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","size","newValue","kelasOption","nama_kelas","Button","sx","backgroundColor","Register","PageContainer","description","container","spacing","justifyContent","overflowX","item","xs","sm","lg","xl","content","background","backgroundSize","animation","height","width","opacity","Logo","alignItems","display","src","img1","alt","style","maxWidth","p","AuthRegister","direction","Link","to","textDecoration","border","concat","palette","divider","primary","main","CustomSocialButton","Avatar","icon1","borderRadius","mr","whiteSpace","icon2"],"sourceRoot":""}