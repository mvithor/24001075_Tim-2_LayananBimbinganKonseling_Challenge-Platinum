{"version":3,"file":"static/js/9189.dd38af61.chunk.js","mappings":"8SAGA,MAAMA,EAAS,CACb,CACEC,GAAI,aACJC,MAAO,aAET,CACEA,MAAO,eAQX,EAJ4BC,KAC1BC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACH,MAAM,aAAaI,MAAON,I,iJCMxC,MAgIA,EAhIqBO,IAQd,IARe,SACpBC,EAAQ,KACRC,EAAI,YACJC,EAAW,iBACXC,EAAgB,wBAChBC,EAAuB,WACvBC,EAAU,aACVC,GACDP,EACC,MAAMQ,EAAYN,EAAO,EAAIO,KAAKC,IAAI,GAAI,EAAIR,GAAQC,EAAcF,EAASU,QAAU,EAQvF,OACEd,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,QAAQ,WAAUC,UACvBjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAAAD,UACbE,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAC,aAAW,0BAA0BC,GAAI,CAAEC,WAAY,UAAWL,SAAA,EACvEjB,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CAAAN,UACRE,EAAAA,EAAAA,MAACK,EAAAA,EAAQ,CAAAP,SAAA,EACPjB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACV,QAAQ,KAAKK,GAAI,CAAEM,SAAU,QAASV,SAAC,UAErDjB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACV,QAAQ,KAAKK,GAAI,CAAEM,SAAU,QAASV,SAAC,YAErDjB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACV,QAAQ,KAAKK,GAAI,CAAEM,SAAU,QAASV,SAAC,qBAErDjB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACV,QAAQ,KAAKK,GAAI,CAAEM,SAAU,QAASV,SAAC,qBAErDjB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACV,QAAQ,KAAKK,GAAI,CAAEM,SAAU,QAASV,SAAC,aAErDjB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACV,QAAQ,KAAKK,GAAI,CAAEM,SAAU,QAASV,SAAC,cAErDjB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAACG,MAAM,SAAQX,UACvBjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACV,QAAQ,KAAKK,GAAI,CAAEM,SAAU,QAASV,SAAC,iBAIzDE,EAAAA,EAAAA,MAACU,EAAAA,EAAS,CAAAZ,SAAA,EACNX,EAAc,EACZF,EAAS0B,MAAMzB,EAAOC,EAAaD,EAAOC,EAAcA,GACxDF,GACF2B,KAAI,CAACC,EAASC,KACdd,SAAAA,EAAAA,MAACK,EAAAA,EAAQ,CAAAP,SAAA,EACPjB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACL,GAAI,CAAEM,SAAU,QAASV,SAAEZ,EAAOC,EAAc2B,EAAQ,OAEtEjC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACL,GAAI,CAAEM,SAAU,QAASV,SAAEe,EAAQE,UAEjDlC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACL,GAAI,CAAEM,SAAU,QAASV,SAAEe,EAAQG,mBAEjDnC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACL,GAAI,CAAEM,SAAU,QAASV,UAnD9BmB,EAmD8CJ,EAAQK,iBAlD1D,IAAbD,EAAuB,YACV,IAAbA,EAAuB,YACpB,wBAkDKpC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACL,GAAI,CAAEM,SAAU,QAASV,SAAEe,EAAQM,gBAEjDtC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACL,GAAI,CAAEM,SAAU,QAASV,SAAEe,EAAQO,YAEjDvC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAAR,UACRE,EAAAA,EAAAA,MAACqB,EAAAA,EAAG,CAACnB,GAAI,CAAEoB,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,OAAQ,QAAS3B,SAAA,EAC7FjB,EAAAA,EAAAA,KAAC6C,EAAAA,EAAO,CAAC/C,MAAM,OAAOgD,UAAU,SAAQ7B,UACxCjB,EAAAA,EAAAA,KAAC+C,EAAAA,EAAU,CAACC,QAASA,IAAMvC,EAAWuB,EAAQiB,IAAIhC,UAC9CjB,EAAAA,EAAAA,KAACkD,EAAAA,IAAU,CAACC,MAAO,UAGrBnD,EAAAA,EAAAA,KAAC6C,EAAAA,EAAO,CAAC/C,MAAM,QAAQgD,UAAU,SAAQ7B,UACzCjB,EAAAA,EAAAA,KAAC+C,EAAAA,EAAU,CAACC,QAASA,IAAMtC,EAAasB,EAAQiB,IAAIhC,UAClDjB,EAAAA,EAAAA,KAACoD,EAAAA,IAAS,CAACD,MAAO,gBA5BXnB,EAAQiB,IAxCZb,KA0EZ,IACAzB,EAAY,IACXX,EAAAA,EAAAA,KAACwB,EAAAA,EAAQ,CAAC6B,MAAO,CAAET,OAAQ,GAAKjC,GAAYM,UAC1CjB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAAC6B,QAAS,UAI1BtD,EAAAA,EAAAA,KAACuD,EAAAA,EAAW,CAAAtC,UACVjB,EAAAA,EAAAA,KAACwB,EAAAA,EAAQ,CAAAP,UACPjB,EAAAA,EAAAA,KAACwD,EAAAA,EAAe,CACdC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEC,MAAO,MAAOC,OAAQ,IACxDL,QAAS,EACTM,MAAOxD,EAASU,OAChBR,YAAaA,EACbD,KAAMA,EACNwD,YAAa,CACXC,WAAY,CACV,aAAc,iBAEhBC,QAAQ,GAEVC,aAAczD,EACd0D,oBAAqBzD,EACrB0D,iBAAkBC,EAAAA,cAMtB,ECgCZ,EA7JqBC,KACnB,MAAO/D,EAAMgE,IAAWC,EAAAA,EAAAA,UAAS,IAC1BhE,EAAaiE,IAAkBD,EAAAA,EAAAA,UAAS,IACxClE,EAAUoE,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,KAChCK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,KACxCO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,KAC5BS,EAAiBC,IAAsBV,EAAAA,EAAAA,UAAS,OAChDW,EAAmBC,IAAwBZ,EAAAA,EAAAA,WAAS,GACrDa,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACcC,WACpB,IACE,MAAMC,QAAiBC,EAAAA,EAAcC,IAAI,aACzCjB,EAAYe,EAASG,KACvB,CAAE,MAAOb,GACPc,QAAQd,MAAM,qBAAsBA,EAAMe,SAC1Cd,EAAS,qCACX,GAaFe,GAVqBP,WACnB,IACE,MAAMC,QAAiBC,EAAAA,EAAcC,IAAI,qBACzCf,EAAWa,EAASG,KACtB,CAAE,MAAOb,GACPc,QAAQd,MAAM,0BAA2BA,GACzCC,EAAS,2CACX,GAIFgB,EAAc,GACb,IAEH,MAwBMC,EAA2BA,KAC/Bb,GAAqB,EAAM,EAWvBc,EARyB5F,EAAS2B,KAAIC,IAC1C,MAAMiE,EAAexB,EAAQyB,MAAKC,GAAOA,EAAIlD,KAAOjB,EAAQoE,WAC5D,MAAO,IACFpE,EACHM,WAAY2D,EAAeA,EAAaI,WAAa,kBACtD,IAIAC,QAAQtE,GACPA,EAAQE,KAAKqE,cAAcC,SAAS7B,EAAY4B,iBAEjDE,MAAK,CAACC,EAAGC,IAAMD,EAAExE,KAAK0E,cAAcD,EAAEzE,QAEnC2E,EAAc1G,IAAkB,IAAjB,QAAEyF,GAASzF,EAC9B,OACEH,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CAACC,SAAS,QAAO9F,SACpB2E,GACK,EAIZ,OACEzE,EAAAA,EAAAA,MAAC6F,EAAAA,EAAa,CAAClH,MAAM,aAAamH,YAAY,aAAYhG,SAAA,EACxDjB,EAAAA,EAAAA,KAACD,EAAmB,KACpBC,EAAAA,EAAAA,KAACwC,EAAAA,EAAG,CAACE,eAAgB,SAAUwE,GAAI,EAAEjG,SAClC4D,IAAS7E,EAAAA,EAAAA,KAAC6G,EAAW,CAACjB,QAASf,OAElC1D,EAAAA,EAAAA,MAACgG,EAAAA,EAAU,CAACrH,MAAM,aAAYmB,SAAA,EAC5BjB,EAAAA,EAAAA,KAACwC,EAAAA,EAAG,CACFnB,GAAI,CACFoB,QAAS,OACTE,WAAY,SACZuE,GAAI,GACJjG,UAEFjB,EAAAA,EAAAA,KAACoH,EAAAA,EAAS,CACR1D,MAAM,SACN1C,QAAQ,WACR2C,MAAOgB,EACP0C,SApEkBC,IAC1B1C,EAAe0C,EAAMC,OAAO5D,MAAM,EAoE1B6D,WAAY,CACVnG,GAAI,CAAEoG,QAAS,aAIrBzH,EAAAA,EAAAA,KAAC0H,EAAY,CACXtH,SAAU4F,EACV3F,KAAMA,EACNC,YAAaA,EACbC,iBAAkB8D,EAClB7D,wBAAyB+D,EACzB9D,WA5EYwC,IAClBkC,EAAS,+BAADwC,OAAgC1E,GAAK,EA4EvCvC,aA9DyBuC,IAC/B+B,EAAmB/B,GACnBiC,GAAqB,EAAK,QAiExB/D,EAAAA,EAAAA,MAACyG,EAAAA,EAAM,CACLC,KAAM5C,EACN6C,QAAS/B,EACTgC,SAAS,KACTC,WAAS,EAAA/G,SAAA,EAETjB,EAAAA,EAAAA,KAACiI,EAAAA,EAAa,CAAAhH,UACZjB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACV,QAAQ,KAAKY,MAAM,SAASP,GAAI,CAAE6G,GAAI,EAAGhB,GAAI,GAAIjG,SAAC,qDAIhEE,EAAAA,EAAAA,MAACgH,EAAAA,EAAa,CAAC9G,GAAI,CAAEqB,eAAgB,SAAUwE,GAAI,GAAIjG,SAAA,EACrDjB,EAAAA,EAAAA,KAACoI,EAAAA,EAAM,CACL/G,GAAI,CAACgH,GAAG,GAERrH,QAAQ,WACRsH,MAAM,YAAYtF,QAAS+C,EAAyB9E,SAAC,WAGvDjB,EAAAA,EAAAA,KAACoI,EAAAA,EAAM,CACL/G,GAAI,CACFgH,GAAI,EACJE,gBAAiB,UACjB,UAAW,CAAEA,gBAAiB,YAEjCvH,QAAQ,YACRgC,QAASA,IAxGGsC,WACnB,UACQE,EAAAA,EAAcgD,OAAO,aAADb,OAAc1E,IACxCuB,EAAYpE,EAASkG,QAAOtE,GAAWA,EAAQiB,KAAOA,KACtDiC,GAAqB,EACvB,CAAE,MAAOL,GACPc,QAAQd,MAAM,+CAAgDA,EAAMe,SACpEd,EAAS,8CACX,GAgGsBpE,CAAaqE,GAAiB9D,SAAC,kBAKrC,C","sources":["components/apps/siswa/siswaList/BreadcrumbSiswa.js","components/apps/siswa/siswaList/StudentTable.js","views/apps/siswa/SiswaList.js"],"sourcesContent":["import React from 'react';\nimport Breadcrumb from 'src/layouts/full/shared/breadcrumb/Breadcrumb';\n\nconst BCrumb = [\n  {\n    to: '/dashboard',\n    title: 'Dashboard',\n  },\n  {\n    title: 'Data Siswa',\n  },\n];\n\nconst BreadcrumbComponent = () => (\n  <Breadcrumb title=\"Data Siswa\" items={BCrumb} />\n);\n\nexport default BreadcrumbComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Typography,\n  TableHead,\n  Table,\n  TableBody,\n  Tooltip,\n  TableCell,\n  TablePagination,\n  TableRow,\n  TableFooter,\n  IconButton,\n  Paper,\n  TableContainer,\n  Box,\n} from '@mui/material';\nimport { IconPencil, IconTrash } from '@tabler/icons';\nimport TablePaginationActions from './TablePaginationAction';\n\nconst StudentTable = ({\n  students,\n  page,\n  rowsPerPage,\n  handleChangePage,\n  handleChangeRowsPerPage,\n  handleEdit,\n  handleDelete,\n}) => {\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - students.length) : 0;\n\n  const parsingGender = (genderId) => {\n    if (genderId === 1) return 'Laki-Laki';\n    if (genderId === 2) return 'Perempuan';\n    return 'Tidak Diketahui';\n  };\n\n  return (\n    <Paper variant=\"outlined\">\n      <TableContainer>\n        <Table aria-label=\"custom pagination table\" sx={{ whiteSpace: 'nowrap' }}>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                <Typography variant=\"h6\" sx={{ fontSize: '1rem' }}>No</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography variant=\"h6\" sx={{ fontSize: '1rem' }}>Nama</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography variant=\"h6\" sx={{ fontSize: '1rem' }}>Tanggal Lahir</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography variant=\"h6\" sx={{ fontSize: '1rem' }}>Jenis Kelamin</Typography>\n              </TableCell>\n              <TableCell>\n                <Typography variant=\"h6\" sx={{ fontSize: '1rem' }}>Kelas</Typography> \n              </TableCell>\n              <TableCell>\n                <Typography variant=\"h6\" sx={{ fontSize: '1rem' }}>Alamat</Typography>\n              </TableCell>\n              <TableCell align=\"center\">\n                <Typography variant=\"h6\" sx={{ fontSize: '1rem' }}>Aksi</Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {(rowsPerPage > 0\n              ? students.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : students\n            ).map((student, index) => (\n              <TableRow key={student.id}>\n                <TableCell>\n                  <Typography sx={{ fontSize: '1rem' }}>{page * rowsPerPage + index + 1}</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography sx={{ fontSize: '1rem' }}>{student.name}</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography sx={{ fontSize: '1rem' }}>{student.tanggal_lahir}</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography sx={{ fontSize: '1rem' }}>{parsingGender(student.jenis_kelamin_id)}</Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography sx={{ fontSize: '1rem' }}>{student.kelas_nama}</Typography> \n                </TableCell>\n                <TableCell>\n                  <Typography sx={{ fontSize: '1rem' }}>{student.alamat}</Typography>\n                </TableCell>\n                <TableCell>\n                  <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\n                  <Tooltip title=\"Edit\" placement=\"bottom\">\n                  <IconButton onClick={() => handleEdit(student.id)}>\n                      <IconPencil width={20} />\n                    </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Hapus\" placement=\"bottom\">\n                    <IconButton onClick={() => handleDelete(student.id)}>\n                      <IconTrash width={20} />\n                    </IconButton>\n                    </Tooltip>\n                  </Box>\n                </TableCell>\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={7} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                colSpan={7}\n                count={students.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: {\n                    'aria-label': 'rows per page',\n                  },\n                  native: true,\n                }}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nStudentTable.propTypes = {\n  students: PropTypes.array.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default StudentTable;\n","import React, { useEffect, useState } from 'react';\nimport axiosInstance from 'src/utils/axiosInstance';\nimport { Box, TextField, Alert, Typography, Button, Dialog, DialogActions, DialogContent } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport PageContainer from 'src/components/container/PageContainer';\nimport ParentCard from 'src/components/shared/ParentCard';\nimport BreadcrumbComponent from 'src/components/apps/siswa/siswaList/BreadcrumbSiswa';\nimport StudentTable from 'src/components/apps/siswa/siswaList/StudentTable';\n\nconst StudentsList = () => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [students, setStudents] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [error, setError] = useState('');\n  const [deleteStudentId, setDeleteStudentId] = useState(null); \n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false); \n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await axiosInstance.get('/students');\n        setStudents(response.data);\n      } catch (error) {\n        console.error('Terjadi kesalahan:', error.message);\n        setError('Terjadi kesalahan saat memuat data');\n      }\n    };\n\n    const fetchClasses = async () => {\n      try {\n        const response = await axiosInstance.get('/kelas/nama-kelas');\n        setClasses(response.data); // Fill classes state with the fetched data\n      } catch (error) {\n        console.error('Error fetching classes:', error);\n        setError('Terjadi kesalahan saat memuat data kelas');\n      }\n    };\n\n    fetchStudents();\n    fetchClasses();\n  }, []);\n\n  const handleSearchChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleEdit = (id) => {\n    navigate(`/dashboard/admin/siswa/edit/${id}`);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await axiosInstance.delete(`/students/${id}`);\n      setStudents(students.filter(student => student.id !== id));\n      setConfirmDialogOpen(false); \n    } catch (error) {\n      console.error('Terjadi kesalahan saat menghapus data siswa:', error.message);\n      setError('Terjadi kesalahan saat menghapus data siswa');\n    }\n  };\n\n  const handleOpenConfirmDialog = (id) => {\n    setDeleteStudentId(id);\n    setConfirmDialogOpen(true);\n  };\n\n  const handleCloseConfirmDialog = () => {\n    setConfirmDialogOpen(false);\n  };\n\n  const studentsWithClassNames = students.map(student => {\n    const studentClass = classes.find(cls => cls.id === student.kelas_id);\n    return {\n      ...student,\n      kelas_nama: studentClass ? studentClass.nama_kelas : 'Tidak Diketahui',\n    };\n  });\n\n  const filteredStudents = studentsWithClassNames\n    .filter((student) =>\n      student.name.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n    .sort((a, b) => a.name.localeCompare(b.name));\n\n  const ColorAlerts = ({ message }) => {\n    return (\n      <Alert severity=\"error\">\n        {message}\n      </Alert>\n    );\n  };\n\n  return (\n    <PageContainer title=\"Data Siswa\" description=\"Data Siswa\">\n      <BreadcrumbComponent />\n      <Box justifyContent={'center'} mb={5}>\n        {error && <ColorAlerts message={error} />}\n      </Box>\n      <ParentCard title=\"Data Siswa\">\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            mb: 2,\n          }}\n        >\n          <TextField\n            label=\"Search\"\n            variant=\"outlined\"\n            value={searchQuery}\n            onChange={handleSearchChange}\n            InputProps={{\n              sx: { padding: '4px' },\n            }}\n          />\n        </Box>\n        <StudentTable\n          students={filteredStudents}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          handleChangePage={setPage}\n          handleChangeRowsPerPage={setRowsPerPage}\n          handleEdit={handleEdit}\n          handleDelete={handleOpenConfirmDialog} \n        />\n      </ParentCard>\n\n      {/* Dialog Konfirmasi Hapus */}\n      <Dialog\n        open={confirmDialogOpen}\n        onClose={handleCloseConfirmDialog}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogContent>\n          <Typography variant=\"h5\" align=\"center\" sx={{ mt: 2, mb: 2 }}>\n            Apakah Anda yakin ingin menghapus data siswa?\n          </Typography>\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: 'center', mb: 2 }}>\n          <Button \n            sx={{mr:3}}\n          \n            variant=\"outlined\" \n            color=\"secondary\" onClick={handleCloseConfirmDialog}>\n            Batal\n          </Button>\n          <Button \n            sx={{\n              mr: 3,\n              backgroundColor: \"#F48C06\",\n              '&:hover': { backgroundColor: \"#f7a944\" }\n            }}\n           variant=\"contained\" \n           onClick={() => handleDelete(deleteStudentId)}>\n            Hapus\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </PageContainer>\n  );\n};\n\nexport default StudentsList;\n"],"names":["BCrumb","to","title","BreadcrumbComponent","_jsx","Breadcrumb","items","_ref","students","page","rowsPerPage","handleChangePage","handleChangeRowsPerPage","handleEdit","handleDelete","emptyRows","Math","max","length","Paper","variant","children","TableContainer","_jsxs","Table","sx","whiteSpace","TableHead","TableRow","TableCell","Typography","fontSize","align","TableBody","slice","map","student","index","name","tanggal_lahir","genderId","jenis_kelamin_id","kelas_nama","alamat","Box","display","justifyContent","alignItems","height","Tooltip","placement","IconButton","onClick","id","IconPencil","width","IconTrash","style","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","value","count","SelectProps","inputProps","native","onPageChange","onRowsPerPageChange","ActionsComponent","TablePaginationActions","StudentsList","setPage","useState","setRowsPerPage","setStudents","classes","setClasses","searchQuery","setSearchQuery","error","setError","deleteStudentId","setDeleteStudentId","confirmDialogOpen","setConfirmDialogOpen","navigate","useNavigate","useEffect","async","response","axiosInstance","get","data","console","message","fetchStudents","fetchClasses","handleCloseConfirmDialog","filteredStudents","studentClass","find","cls","kelas_id","nama_kelas","filter","toLowerCase","includes","sort","a","b","localeCompare","ColorAlerts","Alert","severity","PageContainer","description","mb","ParentCard","TextField","onChange","event","target","InputProps","padding","StudentTable","concat","Dialog","open","onClose","maxWidth","fullWidth","DialogContent","mt","DialogActions","Button","mr","color","backgroundColor","delete"],"sourceRoot":""}